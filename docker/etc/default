# You may add here your
# server {
#	...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

server { 
#rewrite ^(/.well-known/acme-challenge/.*) $1 break; # managed by Certbot
	listen 80 default_server;
	#listen [::]:80 default_server ipv6only=on;

	#root /usr/share/nginx/html;
	root /home/ubuntu/public_html;
	index index.html index.htm;

	# Make site accessible from http://localhost/
#	server_name localhost;

	gzip on;
	gzip_types text/plain text/css application/json application/javascript text/xml image/png application/xml application/xml+rss text/javascript;
	#gzip_static on;

	location / {
	proxy_pass http://standup.csc.kth.se:8888;
        proxy_set_header  X-Real-IP $remote_addr;
        proxy_set_header  X-Forwarded-For $remote_addr;

		# as directory, then fall back to displaying a 404.
		#		try_files $uri $uri/ =404;
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules

		 #add_header 'Access-Control-Allow-Origin' '*';	
	}

  }	
	

#location = /.well-known/acme-challenge/bYdETpbRFvcWhJGPzdhp84JHMqf5CCTTNKZjP8h89Po{default_type text/plain;return 200 bYdETpbRFvcWhJGPzdhp84JHMqf5CCTTNKZjP8h89Po.Ip7ckjkbiLVGNcqCMkNJiiFxve-pyCL5GFP5q-osCdg;}  # managed by Certbot

	# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
	#location /RequestDenied {
	#	proxy_pass http://127.0.0.1:8080;    
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/html;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	#location ~ \.php$ {
	#	fastcgi_split_path_info ^(.+\.php)(/.+)$;
	#	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
	#
	#	# With php5-cgi alone:
	#	fastcgi_pass 127.0.0.1:9000;
	#	# With php5-fpm:
	#	fastcgi_pass unix:/var/run/php5-fpm.sock;
	#	fastcgi_index index.php;
	#	include fastcgi_params;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
#}

#server {
#  listen 8081;
#  server_name standup.csc.kth.se;
#  root /home/cristi/maps/TileStache-1.49.8/public;
#  error_log   /var/log/nginx/tilestache-error.log;
#  access_log  /var/log/nginx/tilestache-access.log;
#  add_header Access-Control-Allow-Origin * always;	

#	gzip on;
#	gzip_types text/plain text/css application/json application/javascript text/xml image/png application/xml application/xml+rss text/javascript;

#  types {
#      text/json json geojson;
#  }
#  location / {
#      try_files @uri @passenger;
#  }
#  location @passenger {
#    passenger_enabled on;
#    root /home/cristi/maps/TileStache-1.49.8/public;
#  }
#}



# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#	ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
